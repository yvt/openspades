name: CI
on:
  pull_request:
  push:

jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true
          path: openspades

      - name: Cache vcpkg and dependencies
        uses: actions/cache@v2
        with:
          path: |
            vcpkg/installed
            !.git
          key: ${{ runner.os }}-${{ hashFiles('vcpkg_x86-windows.txt', '.gitmodules') }}

      - name: Bootstrap vcpkg
        run: vcpkg/bootstrap-vcpkg.bat

      - name: Build dependencies
        run: vcpkg/vcpkg install @vcpkg_x86-windows.txt

      - name: Build application
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/openspades.mk
          build-type: RelWithDebInfo
          configure-options: -A Win32 -D CMAKE_BUILD_TYPE=RelWithDebInfo -D CMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/openspades/vcpkg/scripts/buildsystems/vcpkg.cmake -D VCPKG_TARGET_TRIPLET=x86-windows-static
          parallel: 8

  build-macos:
    name: Build (macOS)
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true
          path: openspades

      - name: Cache vcpkg and dependencies
        uses: actions/cache@v2
        with:
          path: |
            vcpkg/installed
            !.git
          key: ${{ runner.os }}-${{ hashFiles('vcpkg_x86_64-darwin.txt', '.gitmodules') }}

      - name: Bootstrap vcpkg
        run: vcpkg/bootstrap-vcpkg.sh

      - name: Build dependencies
        run: vcpkg/vcpkg install @vcpkg_x86_64-darwin.txt

      - name: Build application
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/openspades.mk
          build-type: RelWithDebInfo
          cc: gcc
          cxx: g++
          configure-options: -D CMAKE_BUILD_TYPE=RelWithDebInfo -D CMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/openspades/vcpkg/scripts/buildsystems/vcpkg.cmake -D VCPKG_TARGET_TRIPLET=x64-osx -D CMAKE_OSX_ARCHITECTURES=x86_64
  
  build-nix:
    name: Build (Linux + Nix)
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v17

      - name: Build Nix flake
        run: nix build

