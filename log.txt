2016/08/29 20:57:36 [Main.cpp:384] Package: OpenSpades 0.0.12
2016/08/29 20:57:36 [DirectoryFileSystem.cpp:45] Directory File System Initialized: ./Resources (Read-only)
2016/08/29 20:57:36 [DirectoryFileSystem.cpp:45] Directory File System Initialized: /usr/local/share/games/openspades/Resources (Read-only)
2016/08/29 20:57:36 [Main.cpp:434] XDG_DATA_HOME not defined. Assuming that XDG_DATA_HOME is ~/.local/share
2016/08/29 20:57:36 [DirectoryFileSystem.cpp:45] Directory File System Initialized: /home/flavio/.local/share/openspades/Resources (Read/Write)
2016/08/29 20:57:36 [Main.cpp:483] Log Started.
2016/08/29 20:57:36 [FltkPreferenceImporter.cpp:78] Checking for legacy preference file: /home/flavio/.fltk/yvt.jp/OpenSpades.prefs
2016/08/29 20:57:36 [FltkPreferenceImporter.cpp:82] Legacy preference file wasn't found.
2016/08/29 20:57:36 [Settings.cpp:65] Loading preferences from SPConfig.cfg
2016/08/29 20:57:36 [Settings.cpp:69] SPConfig.cfg found.
2016/08/29 20:57:36 [Main.cpp:492] ---- CPU Information ----
2016/08/29 20:57:36 [Main.cpp:493] Vendor ID: GenuntelineI
2016/08/29 20:57:36 [Main.cpp:494] Brand ID:        Intel(R) Core(TM) i5-3230M CPU @ 2.60GHz
2016/08/29 20:57:36 [Main.cpp:495] Supports MMX: YES
2016/08/29 20:57:36 [Main.cpp:496] Supports SSE: YES
2016/08/29 20:57:36 [Main.cpp:497] Supports SSE2: YES
2016/08/29 20:57:36 [Main.cpp:498] Supports SSE3: YES
2016/08/29 20:57:36 [Main.cpp:499] Supports SSSE3: YES
2016/08/29 20:57:36 [Main.cpp:500] Supports FMA: NO
2016/08/29 20:57:36 [Main.cpp:501] Supports AVX: YES
2016/08/29 20:57:36 [Main.cpp:502] Supports AVX2: NO
2016/08/29 20:57:36 [Main.cpp:503] Supports AVX512F: NO
2016/08/29 20:57:36 [Main.cpp:504] Supports AVX512CD: NO
2016/08/29 20:57:36 [Main.cpp:505] Supports AVX512ER: NO
2016/08/29 20:57:36 [Main.cpp:506] Supports AVX512PF: NO
2016/08/29 20:57:36 [Main.cpp:507] Simultaneous Multithreading: YES
2016/08/29 20:57:36 [Main.cpp:508] Misc:
2016/08/29 20:57:36 [Main.cpp:509] (none)
2016/08/29 20:57:36 [Main.cpp:510] -------------------------
2016/08/29 20:57:36 [Main.cpp:565] Pak Registered: pak000-Base.pak

2016/08/29 20:57:36 [Main.cpp:565] Pak Registered: pak001-Sounds.pak

2016/08/29 20:57:36 [Main.cpp:565] Pak Registered: pak002-Models.pak

2016/08/29 20:57:36 [Main.cpp:565] Pak Registered: pak010-BaseSkin.pak

2016/08/29 20:57:36 [Main.cpp:565] Pak Registered: pak999-References.pak

2016/08/29 20:57:36 [Main.cpp:580] Initializing localization system
2016/08/29 20:57:36 [Strings.cpp:938] Fetching catalog file (locale='pt_br', domain='openspades')
2016/08/29 20:57:36 [Strings.cpp:944] Catalog file 'Locales/pt_br/openspades.po' not loaded: File not found: Locales/pt_br/openspades.po
at /home/flavio/Downloads/op/openspades/Sources/Core/FileManager.cpp:39
static spades::IStream* spades::FileManager::OpenForReading(const char*) at FileManager.cpp:32
static std::__cxx11::string spades::FileManager::ReadAllBytes(const char*) at FileManager.cpp:91
std::shared_ptr<spades::CatalogOfLanguage> spades::CatalogDomain::operator[](const string&) at Strings.cpp:932
std::shared_ptr<spades::CatalogOfLanguage> spades::GetCatalogOfLanguage(const string&) at Strings.cpp:1002
std::__cxx11::string spades::GetTextRaw(const string&, const string&, const string&, int) at Strings.cpp:1018
int main(int, char**) at Main.cpp:372

2016/08/29 20:57:36 [Strings.cpp:938] Fetching catalog file (locale='pt', domain='openspades')
2016/08/29 20:57:36 [Strings.cpp:944] Catalog file 'Locales/pt/openspades.po' not loaded: File not found: Locales/pt/openspades.po
at /home/flavio/Downloads/op/openspades/Sources/Core/FileManager.cpp:39
static spades::IStream* spades::FileManager::OpenForReading(const char*) at FileManager.cpp:32
static std::__cxx11::string spades::FileManager::ReadAllBytes(const char*) at FileManager.cpp:91
std::shared_ptr<spades::CatalogOfLanguage> spades::CatalogDomain::operator[](const string&) at Strings.cpp:932
std::shared_ptr<spades::CatalogOfLanguage> spades::GetCatalogOfLanguage(const string&) at Strings.cpp:1002
std::__cxx11::string spades::GetTextRaw(const string&, const string&, const string&, int) at Strings.cpp:1018
int main(int, char**) at Main.cpp:372

2016/08/29 20:57:36 [Main.cpp:588] Initializing script engine
2016/08/29 20:57:36 [ScriptManager.cpp:80] Creating script engine
2016/08/29 20:57:36 [ScriptManager.cpp:84] Configuring
2016/08/29 20:57:36 [ScriptManager.cpp:88] Registering standard libray functions
2016/08/29 20:57:36 [ScriptManager.cpp:99] Registering APIs
2016/08/29 20:57:36 [ScriptManager.cpp:105] Loading scripts
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Main.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Base/Base.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Base/Utils.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Skin.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/BasicViewWeapon.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Spade/ThirdPerson.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Spade/View.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Block/ThirdPerson.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Block/View.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Grenade/ThirdPerson.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Grenade/View.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Rifle/ThirdPerson.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Rifle/View.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/SMG/ThirdPerson.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/SMG/View.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Shotgun/ThirdPerson.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Skin/Shotgun/View.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/Gui.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/UIFramework.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/UIControls.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/MessageBox.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/MainScreen.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/Flags.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/StartupScreen.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/DropDownList.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/Preferences.as'
2016/08/29 20:57:36 [ScriptManager.cpp:71] Loading script '/Gui/ClientUI.as'
2016/08/29 20:57:36 [ScriptManager.cpp:115] Building
2016/08/29 20:57:37 [Main.cpp:616] Starting startup window
2016/08/29 20:57:37 [StartupScreenHelper.cpp:98] Checking YSR availability
2016/08/29 20:57:37 [StartupScreenHelper.cpp:112] Checking OpenAL availability
2016/08/29 20:57:37 [ALFuncs.cpp:236] Linking with OpenAL library.
2016/08/29 20:57:37 [ALFuncs.cpp:172] 'libopenal.so' loaded
2016/08/29 20:57:37 [StartupScreenHelper.cpp:130] Performing ecapability query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:148] Video Mode Found: 1366x768
2016/08/29 20:57:37 [StartupScreenHelper.cpp:148] Video Mode Found: 1360x768
2016/08/29 20:57:37 [StartupScreenHelper.cpp:148] Video Mode Found: 1280x720
2016/08/29 20:57:37 [StartupScreenHelper.cpp:148] Video Mode Found: 1024x768
2016/08/29 20:57:37 [StartupScreenHelper.cpp:148] Video Mode Found: 800x600
2016/08/29 20:57:37 [StartupScreenHelper.cpp:227] --- OpenGL Renderer Info ---
2016/08/29 20:57:37 [StartupScreenHelper.cpp:232] Vendor: Intel Open Source Technology Center
2016/08/29 20:57:37 [StartupScreenHelper.cpp:237] Name: Mesa DRI Intel(R) Ivybridge Mobile 
2016/08/29 20:57:37 [StartupScreenHelper.cpp:244] Version: 3.0 Mesa 11.2.0
2016/08/29 20:57:37 [StartupScreenHelper.cpp:249] Shading Language Version: 1.30
2016/08/29 20:57:37 [StartupScreenHelper.cpp:257] Max Texture Size: 8192
2016/08/29 20:57:37 [StartupScreenHelper.cpp:262] Max 3D Texture Size: 2048
2016/08/29 20:57:37 [StartupScreenHelper.cpp:268] Max Combined Texture Image Units: 80
2016/08/29 20:57:37 [StartupScreenHelper.cpp:274] Max Vertex Texture Image Units: 16
2016/08/29 20:57:37 [StartupScreenHelper.cpp:280] Max Varying Components: 128
2016/08/29 20:57:37 [StartupScreenHelper.cpp:297] --- Extensions ---
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_multisample
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_abgr
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_bgra
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_blend_color
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_blend_minmax
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_blend_subtract
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_copy_texture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_polygon_offset
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_subtexture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_vertex_array
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_compiled_vertex_array
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture3D
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_IBM_rasterpos_clip
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_point_parameters
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_draw_range_elements
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_packed_pixels
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_point_parameters
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_rescale_normal
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_separate_specular_color
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_edge_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_SGIS_generate_mipmap
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_SGIS_texture_border_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_SGIS_texture_edge_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_SGIS_texture_lod
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_framebuffer_sRGB
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_multitexture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_framebuffer_sRGB
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_IBM_multimode_draw_arrays
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_IBM_texture_mirrored_repeat
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_3DFX_texture_compression_FXT1
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_cube_map
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_env_add
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_transpose_matrix
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_blend_func_separate
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_fog_coord
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_multi_draw_arrays
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_secondary_color
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_env_add
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_filter_anisotropic
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_lod_bias
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_INGR_blend_func_separate
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_blend_square
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_light_max_exponent
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_texgen_reflection
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_texture_env_combine4
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_S3_s3tc
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_SUN_multi_draw_arrays
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_border_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_compression
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_framebuffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_compression_s3tc
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_env_combine
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_env_dot3
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_MESA_window_pos
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_packed_depth_stencil
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_texture_rectangle
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_depth_texture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_occlusion_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shadow
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_env_combine
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_env_crossbar
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_env_dot3
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_mirrored_repeat
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_window_pos
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_stencil_two_side
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_cube_map
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_depth_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_APPLE_packed_pixels
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_APPLE_vertex_array_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_draw_buffers
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_fragment_program
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_fragment_shader
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_objects
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_program
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_shader
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ATI_draw_buffers
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ATI_texture_env_combine3
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ATI_texture_float
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_shadow_funcs
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_stencil_wrap
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_MESA_pack_invert
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_primitive_restart
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_depth_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_fragment_program_shadow
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_half_float_pixel
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_occlusion_query2
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_point_sprite
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shading_language_100
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_sync
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_non_power_of_two
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_buffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ATI_blend_equation_separate
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_blend_equation_separate
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_OES_read_format
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_color_buffer_float
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_pixel_buffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_compression_rgtc
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_float
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_rectangle
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_packed_float
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_pixel_buffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_compression_dxt1
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_compression_rgtc
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_rectangle
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_sRGB
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_shared_exponent
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_framebuffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_framebuffer_blit
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_framebuffer_multisample
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_packed_depth_stencil
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_APPLE_object_purgeable
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_array_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ATI_separate_stencil
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_draw_buffers2
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_draw_instanced
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_gpu_program_parameters
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_array
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_integer
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_sRGB_decode
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_timer_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_OES_EGL_image
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_AMD_performance_monitor
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_copy_buffer
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_depth_buffer_float
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_draw_instanced
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_half_float_vertex
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_instanced_arrays
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_map_buffer_range
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_rg
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_swizzle
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_array_bgra
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_swizzle
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_vertex_array_bgra
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_conditional_render
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_AMD_conservative_depth
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_AMD_draw_buffers_blend
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_AMD_seamless_cubemap_per_texture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_ES2_compatibility
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_blend_func_extended
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_debug_output
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_draw_buffers_blend
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_draw_elements_base_vertex
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_explicit_attrib_location
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_fragment_coord_conventions
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_provoking_vertex
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_sample_shading
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_sampler_objects
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_seamless_cube_map
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_texture_lod
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_cube_map_array
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_gather
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_multisample
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_query_lod
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_rgb10_a2ui
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_uniform_buffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_type_2_10_10_10_rev
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_provoking_vertex
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_texture_snorm
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_MESA_texture_signed_rgba
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_NV_texture_barrier
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_get_program_binary
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_robustness
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_separate_shader_objects
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_bit_encoding
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_compression_bptc
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_timer_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_transform_feedback2
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_transform_feedback3
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ANGLE_texture_compression_dxt3
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ANGLE_texture_compression_dxt5
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_compressed_texture_pixel_storage
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_conservative_depth
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_internalformat_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_map_buffer_alignment
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_atomic_counters
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_image_load_store
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shading_language_420pack
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shading_language_packing
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_storage
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_transform_feedback_instanced
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_framebuffer_multisample_blit_scaled
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_transform_feedback
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_AMD_shader_trinary_minmax
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_ES3_compatibility
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_arrays_of_arrays
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_clear_buffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_copy_image
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_explicit_uniform_location
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_framebuffer_no_attachments
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_invalidate_subdata
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_program_interface_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_image_size
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_storage_buffer_object
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_query_levels
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_storage_multisample
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_view
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_attrib_binding
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_KHR_debug
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_buffer_storage
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_clear_texture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_multi_bind
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_seamless_cubemap_per_texture
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_draw_parameters
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_mirror_clamp_to_edge
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_vertex_type_10f_11f_11f_rev
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_shader_integer_mix
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_INTEL_performance_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_clip_control
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_conditional_render_inverted
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_derivative_control
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_get_texture_sub_image
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_pipeline_statistics_query
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_texture_image_samples
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_texture_barrier
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_polygon_offset_clamp
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_KHR_context_flush_control
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_ARB_shader_clock
2016/08/29 20:57:37 [StartupScreenHelper.cpp:300] GL_EXT_shader_samples_identical
2016/08/29 20:57:37 [StartupScreenHelper.cpp:302] ------------------
2016/08/29 20:57:37 [StartupScreenHelper.cpp:575] SDL Capability Query Window finalized
2016/08/29 20:57:37 [StartupScreenHelper.cpp:581] OpenGL driver is OpenSpades capable: YES
2016/08/29 20:57:37 [SDLRunner.cpp:422] SDL Version: 2.0.4 hg-10001:e12c38730512
2016/08/29 20:57:37 [SWRenderer.cpp:65] ---- SWRenderer early initialization started ---
2016/08/29 20:57:37 [SWRenderer.cpp:72] creating image manager
2016/08/29 20:57:37 [SWRenderer.cpp:75] creating image renderer
2016/08/29 20:57:37 [SWRenderer.cpp:80] setting framebuffer.
2016/08/29 20:57:37 [SWRenderer.cpp:84] initializing depth buffer.
2016/08/29 20:57:37 [SWRenderer.cpp:88] ---- SWRenderer early initialization done ---
2016/08/29 20:57:37 [Fonts.cpp:56] Font 'CMUSansCondensed' Loaded
2016/08/29 20:57:37 [ScriptManager.cpp:45] System function (1, 1) : ERR  : Identifier 'StartupScreenUI' is not a data type

2016/08/29 20:57:37 [SDLRunner.cpp:205] Starting Client Loop
2016/08/29 20:57:40 [SDLRunner.cpp:221] Close requested by Client
2016/08/29 20:57:40 [SDLRunner.cpp:304] Leaving Client Loop
2016/08/29 20:57:40 [SDLRunner.cpp:422] SDL Version: 2.0.4 hg-10001:e12c38730512
2016/08/29 20:57:40 [SDLGLDevice.cpp:130] starting SDLGLDevice
2016/08/29 20:57:40 [SDLGLDevice.cpp:148] GLEW initialized
2016/08/29 20:57:40 [SDLGLDevice.cpp:150] --- OpenGL Renderer Info ---
2016/08/29 20:57:40 [SDLGLDevice.cpp:153] Vendor: Intel Open Source Technology Center
2016/08/29 20:57:40 [SDLGLDevice.cpp:156] Name: Mesa DRI Intel(R) Ivybridge Mobile 
2016/08/29 20:57:40 [SDLGLDevice.cpp:159] Version: 3.0 Mesa 11.2.0
2016/08/29 20:57:40 [SDLGLDevice.cpp:162] Shading Language Version: 1.30
2016/08/29 20:57:40 [SDLGLDevice.cpp:164] --- Extensions ---
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_3DFX_texture_compression_FXT1
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_AMD_conservative_depth
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_AMD_draw_buffers_blend
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_AMD_performance_monitor
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_AMD_seamless_cubemap_per_texture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_AMD_shader_trinary_minmax
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ANGLE_texture_compression_dxt3
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ANGLE_texture_compression_dxt5
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_APPLE_object_purgeable
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_APPLE_packed_pixels
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_APPLE_vertex_array_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_ES2_compatibility
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_ES3_compatibility
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_arrays_of_arrays
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_blend_func_extended
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_buffer_storage
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_clear_buffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_clear_texture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_clip_control
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_color_buffer_float
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_compressed_texture_pixel_storage
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_conditional_render_inverted
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_conservative_depth
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_copy_buffer
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_copy_image
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_debug_output
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_depth_buffer_float
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_depth_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_depth_texture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_derivative_control
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_draw_buffers
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_draw_buffers_blend
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_draw_elements_base_vertex
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_draw_instanced
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_explicit_attrib_location
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_explicit_uniform_location
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_fragment_coord_conventions
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_fragment_program
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_fragment_program_shadow
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_fragment_shader
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_framebuffer_no_attachments
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_framebuffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_framebuffer_sRGB
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_get_program_binary
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_get_texture_sub_image
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_half_float_pixel
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_half_float_vertex
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_instanced_arrays
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_internalformat_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_invalidate_subdata
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_map_buffer_alignment
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_map_buffer_range
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_multi_bind
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_multisample
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_multitexture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_occlusion_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_occlusion_query2
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_pipeline_statistics_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_pixel_buffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_point_parameters
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_point_sprite
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_program_interface_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_provoking_vertex
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_robustness
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_sample_shading
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_sampler_objects
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_seamless_cube_map
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_seamless_cubemap_per_texture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_separate_shader_objects
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_atomic_counters
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_bit_encoding
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_clock
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_draw_parameters
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_image_load_store
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_image_size
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_objects
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_storage_buffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_texture_image_samples
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shader_texture_lod
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shading_language_100
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shading_language_420pack
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shading_language_packing
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_shadow
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_sync
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_barrier
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_border_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_compression
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_compression_bptc
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_compression_rgtc
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_cube_map
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_cube_map_array
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_env_add
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_env_combine
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_env_crossbar
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_env_dot3
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_float
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_gather
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_mirror_clamp_to_edge
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_mirrored_repeat
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_multisample
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_non_power_of_two
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_query_levels
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_query_lod
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_rectangle
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_rg
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_rgb10_a2ui
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_storage
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_storage_multisample
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_swizzle
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_texture_view
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_timer_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_transform_feedback2
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_transform_feedback3
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_transform_feedback_instanced
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_transpose_matrix
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_uniform_buffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_array_bgra
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_array_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_attrib_binding
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_buffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_program
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_shader
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_type_10f_11f_11f_rev
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_vertex_type_2_10_10_10_rev
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ARB_window_pos
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ATI_blend_equation_separate
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ATI_draw_buffers
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ATI_separate_stencil
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ATI_texture_env_combine3
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_ATI_texture_float
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_abgr
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_bgra
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_blend_color
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_blend_equation_separate
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_blend_func_separate
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_blend_minmax
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_blend_subtract
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_compiled_vertex_array
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_copy_texture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_draw_buffers2
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_draw_instanced
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_draw_range_elements
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_fog_coord
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_framebuffer_blit
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_framebuffer_multisample
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_framebuffer_multisample_blit_scaled
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_framebuffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_framebuffer_sRGB
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_gpu_program_parameters
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_multi_draw_arrays
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_packed_depth_stencil
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_packed_float
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_packed_pixels
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_pixel_buffer_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_point_parameters
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_polygon_offset
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_polygon_offset_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_provoking_vertex
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_rescale_normal
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_secondary_color
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_separate_specular_color
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_shader_integer_mix
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_shader_samples_identical
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_shadow_funcs
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_stencil_two_side
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_stencil_wrap
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_subtexture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture3D
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_array
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_compression_dxt1
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_compression_rgtc
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_compression_s3tc
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_cube_map
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_edge_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_env_add
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_env_combine
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_env_dot3
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_filter_anisotropic
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_integer
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_lod_bias
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_object
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_rectangle
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_sRGB
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_sRGB_decode
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_shared_exponent
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_snorm
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_texture_swizzle
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_timer_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_transform_feedback
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_vertex_array
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_EXT_vertex_array_bgra
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_IBM_multimode_draw_arrays
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_IBM_rasterpos_clip
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_IBM_texture_mirrored_repeat
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_INGR_blend_func_separate
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_INTEL_performance_query
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_KHR_context_flush_control
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_KHR_debug
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_MESA_pack_invert
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_MESA_texture_signed_rgba
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_MESA_window_pos
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_blend_square
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_conditional_render
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_depth_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_light_max_exponent
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_packed_depth_stencil
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_primitive_restart
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_texgen_reflection
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_texture_barrier
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_texture_env_combine4
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_NV_texture_rectangle
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_OES_EGL_image
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_OES_read_format
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_S3_s3tc
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_SGIS_generate_mipmap
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_SGIS_texture_border_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_SGIS_texture_edge_clamp
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_SGIS_texture_lod
2016/08/29 20:57:40 [SDLGLDevice.cpp:171] GL_SUN_multi_draw_arrays
2016/08/29 20:57:40 [SDLGLDevice.cpp:184] ------------------
2016/08/29 20:57:40 [SDLGLDevice.cpp:191] NOTICE: r_ignoreGLErrors is enabled. OpenGL error detection might not work correctly.
2016/08/29 20:57:40 [GLRenderer.cpp:123] GLRenderer bootstrap
2016/08/29 20:57:40 [GLFramebufferManager.cpp:77] Initializing framebuffer manager
2016/08/29 20:57:40 [GLFramebufferManager.cpp:189] Creating Non-MSAA Buffer
2016/08/29 20:57:40 [GLFramebufferManager.cpp:213] Depth Buffer Allocated
2016/08/29 20:57:40 [GLFramebufferManager.cpp:285] Color Buffer Allocated
2016/08/29 20:57:40 [GLFramebufferManager.cpp:309] Framebuffer Created
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/BasicImage.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BasicImage.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BasicImage.fs' in 3.614ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BasicImage.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BasicImage.vs' in 0.553ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/BasicImage.program' in 1.456ms
2016/08/29 20:57:40 [GLRenderer.cpp:138] GLRenderer started
2016/08/29 20:57:40 [ALFuncs.cpp:236] Linking with OpenAL library.
2016/08/29 20:57:40 [ALDevice.cpp:433] --- All devices ---
2016/08/29 20:57:40 [ALDevice.cpp:436] Built-in Audio Analog Stereo
2016/08/29 20:57:40 [ALDevice.cpp:436] Built-in Audio Analog Stereo (echo cancelled with Built-in Audio Analog Stereo)
2016/08/29 20:57:40 [ALDevice.cpp:439] -------------------
2016/08/29 20:57:40 [ALDevice.cpp:441] --- Devices ---
2016/08/29 20:57:40 [ALDevice.cpp:444] OpenAL Soft
2016/08/29 20:57:40 [ALDevice.cpp:447] ---------------
2016/08/29 20:57:40 [ALDevice.cpp:450] Default device: OpenAL Soft
2016/08/29 20:57:40 [ALDevice.cpp:465] OpenAL Info:
2016/08/29 20:57:40 [ALDevice.cpp:466]   Vendor: (null)
2016/08/29 20:57:40 [ALDevice.cpp:467]   Version: (null)
2016/08/29 20:57:40 [ALDevice.cpp:468]   Renderer: (null)
2016/08/29 20:57:40 [ALDevice.cpp:472] OpenAL ALC Extensions:
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_ENUMERATE_ALL_EXT
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_ENUMERATION_EXT
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_EXT_CAPTURE
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_EXT_DEDICATED
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_EXT_disconnect
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_EXT_EFX
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_EXT_thread_local_context
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_SOFTX_device_clock
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_SOFTX_HRTF
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_SOFT_loopback
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_SOFTX_midi_interface
2016/08/29 20:57:40 [ALDevice.cpp:474]   ALC_SOFT_pause_device
2016/08/29 20:57:40 [ALDevice.cpp:493] EAX enabled
2016/08/29 20:57:40 [ALDevice.cpp:515] 16 source(s) initialized
2016/08/29 20:57:40 [Fonts.cpp:56] Font 'CMUSansCondensed' Loaded
2016/08/29 20:57:40 [SDLRunner.cpp:205] Starting Client Loop
2016/08/29 20:57:40 [GLRenderer.cpp:154] GLRenderer initializing for 3D rendering
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/Sprite.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Sprite.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Sprite.fs' in 1.400ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Sprite.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Sprite.vs' in 2.217ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 1.018ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/Sprite.program' in 7.566ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/LongSprite.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/LongSprite.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/LongSprite.fs' in 1.119ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/LongSprite.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/LongSprite.vs' in 1.214ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.958ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/LongSprite.program' in 5.915ms
2016/08/29 20:57:40 [GLRenderer.cpp:167] Preloading Assets
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/BasicBlock.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BasicBlock.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BasicBlock.fs' in 1.236ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BasicBlock.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BasicBlock.vs' in 1.664ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/Common.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/Common.fs' in 0.618ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/Common.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/Common.vs' in 0.821ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/Map.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/Map.fs' in 0.769ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/Map.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/Map.vs' in 0.706ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/ModelNull.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/ModelNull.fs' in 0.402ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/ModelNull.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/ModelNull.vs' in 0.446ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/MapRadiosityLow.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/MapRadiosityLow.fs' in 1.552ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Shadow/MapRadiosity.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Shadow/MapRadiosity.vs' in 0.837ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.901ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/BasicBlock.program' in 20.370ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/BasicBlockDynamicLit.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BasicBlockDynamicLit.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BasicBlockDynamicLit.fs' in 0.757ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BasicBlockDynamicLit.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BasicBlockDynamicLit.vs' in 1.144ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/DynamicLight/Common.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/DynamicLight/Common.fs' in 1.239ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/DynamicLight/Common.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/DynamicLight/Common.vs' in 0.691ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/DynamicLight/MapNull.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/DynamicLight/MapNull.fs' in 0.360ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/DynamicLight/MapNull.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/DynamicLight/MapNull.vs' in 0.382ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.786ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/BasicBlockDynamicLit.program' in 8.026ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/BackFaceBlock.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BackFaceBlock.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BackFaceBlock.fs' in 0.374ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/BackFaceBlock.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/BackFaceBlock.vs' in 0.537ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/BackFaceBlock.program' in 0.993ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/VoxelModel.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/VoxelModel.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/VoxelModel.fs' in 0.848ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/VoxelModel.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/VoxelModel.vs' in 1.517ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.635ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/VoxelModel.program' in 15.973ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/VoxelModelDynamicLit.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/VoxelModelDynamicLit.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/VoxelModelDynamicLit.fs' in 0.563ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/VoxelModelDynamicLit.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/VoxelModelDynamicLit.vs' in 1.077ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.602ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/VoxelModelDynamicLit.program' in 7.330ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/VoxelModelShadowMap.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/VoxelModelShadowMap.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/VoxelModelShadowMap.fs' in 0.344ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/VoxelModelShadowMap.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/VoxelModelShadowMap.vs' in 0.687ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/ShadowMap/Common.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/ShadowMap/Common.fs' in 0.247ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/ShadowMap/Common.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/ShadowMap/Common.vs' in 0.267ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/ShadowMap/Basic.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/ShadowMap/Basic.fs' in 0.265ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/ShadowMap/Basic.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/ShadowMap/Basic.vs' in 0.395ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/VoxelModelShadowMap.program' in 1.339ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/OptimizedVoxelModel.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/OptimizedVoxelModel.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/OptimizedVoxelModel.fs' in 1.198ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/OptimizedVoxelModel.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/OptimizedVoxelModel.vs' in 1.101ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.560ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/OptimizedVoxelModel.program' in 16.216ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/OptimizedVoxelModelDynamicLit.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/OptimizedVoxelModelDynamicLit.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/OptimizedVoxelModelDynamicLit.fs' in 0.659ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/OptimizedVoxelModelDynamicLit.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/OptimizedVoxelModelDynamicLit.vs' in 0.862ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.541ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/OptimizedVoxelModelDynamicLit.program' in 7.490ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/OptimizedVoxelModelShadowMap.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/OptimizedVoxelModelShadowMap.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/OptimizedVoxelModelShadowMap.fs' in 0.320ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/OptimizedVoxelModelShadowMap.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/OptimizedVoxelModelShadowMap.vs' in 0.622ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.517ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/OptimizedVoxelModelShadowMap.program' in 1.244ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/PostFilters/PassThrough.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/PassThrough.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/PassThrough.fs' in 0.350ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/PassThrough.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/PassThrough.vs' in 0.517ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/PostFilters/PassThrough.program' in 1.266ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/PostFilters/AutoExposurePreprocess.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/AutoExposurePreprocess.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/AutoExposurePreprocess.fs' in 0.590ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/PassThrough.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/PassThrough.vs' in 0.513ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/PostFilters/AutoExposurePreprocess.program' in 1.661ms
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/PostFilters/AutoExposure.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/AutoExposure.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/AutoExposure.fs' in 0.480ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/PassThrough.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/PassThrough.vs' in 0.535ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/PostFilters/AutoExposure.program' in 0.964ms
2016/08/29 20:57:40 [GLAutoExposureFilter.cpp:54] Brightness Texture Allocated
2016/08/29 20:57:40 [GLAutoExposureFilter.cpp:82] Brightness Framebuffer Allocated
2016/08/29 20:57:40 [GLRenderer.cpp:211] GLRenderer initialized
2016/08/29 20:57:40 [ScriptManager.cpp:45] System function (1, 1) : ERR  : Identifier 'MainScreenUI' is not a data type

2016/08/29 20:57:40 [GLRenderer.cpp:307] New map loaded; freeing old renderers...
2016/08/29 20:57:40 [GLRenderer.cpp:322] Creating new renderers...
2016/08/29 20:57:40 [GLRenderer.cpp:324] Creating Terrain Shadow Map Renderer
2016/08/29 20:57:40 [GLRenderer.cpp:326] Creating TerrainRenderer
2016/08/29 20:57:40 [GLRenderer.cpp:328] Creating Minimap Renderer
2016/08/29 20:57:40 [GLRenderer.cpp:330] Creating Water Renderer
2016/08/29 20:57:40 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/Water.program'
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Water.fs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Water.fs' in 3.343ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Water.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Water.vs' in 0.656ms
2016/08/29 20:57:40 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/Fog.vs'
2016/08/29 20:57:40 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/Fog.vs' in 0.472ms
2016/08/29 20:57:40 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/Water.program' in 16.817ms
2016/08/29 20:57:40 [GLRenderer.cpp:334] Creating Ray-traced Ambient Occlusion Renderer
2016/08/29 20:57:40 [GLAmbientShadowRenderer.cpp:98] Chunk buffer allocated (67289088 bytes)
2016/08/29 20:57:40 [GLAmbientShadowRenderer.cpp:125] Chunk texture allocated
2016/08/29 20:57:40 [GLAmbientShadowRenderer.cpp:140] Chunk texture initialized
2016/08/29 20:57:40 [GLRenderer.cpp:336] Creating Relective Shadow Maps Renderer
2016/08/29 20:57:41 [GLRadiosityRenderer.cpp:123] Chunk buffer allocated (268615680 bytes)
2016/08/29 20:57:41 [GLRadiosityRenderer.cpp:160] Chunk texture allocated
2016/08/29 20:57:41 [GLRadiosityRenderer.cpp:181] Chunk texture initialized
2016/08/29 20:57:41 [GLRenderer.cpp:344] Created
2016/08/29 20:57:41 [ConcurrentDispatch.cpp:294] Creating 4 dispatch thread(s)
2016/08/29 20:57:41 [GLProgramManager.cpp:88] Loading GLSL program 'Shaders/PostFilters/Nonlinearize.program'
2016/08/29 20:57:41 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/Nonlinearize.fs'
2016/08/29 20:57:41 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/Nonlinearize.fs' in 0.763ms
2016/08/29 20:57:41 [GLProgramManager.cpp:137] Loading GLSL shader 'Shaders/PostFilters/Nonlinearize.vs'
2016/08/29 20:57:41 [GLProgramManager.cpp:173] Successfully compiled GLSL program 'Shaders/PostFilters/Nonlinearize.vs' in 0.671ms
2016/08/29 20:57:41 [GLProgramManager.cpp:129] Successfully linked GLSL program 'Shaders/PostFilters/Nonlinearize.program' in 1.683ms
2016/08/29 20:57:41 [GLFramebufferManager.cpp:697] New GLColorBuffer requested (w = 1024, h = 640, ifmt = 0x0063)
2016/08/29 20:57:41 [GLFramebufferManager.cpp:713] Texture allocated.
2016/08/29 20:57:41 [GLFramebufferManager.cpp:734] Framebuffer created.
2016/08/29 21:01:11 [SDLRunner.cpp:221] Close requested by Client
2016/08/29 21:01:11 [SDLRunner.cpp:304] Leaving Client Loop
2016/08/29 21:01:11 [Settings.cpp:268] Saving preference to SPConfig.cfg
2016/08/29 21:01:11 [Settings.cpp:184] Saving preferences to SPConfig.cfg
